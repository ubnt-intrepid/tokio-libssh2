name: Workflow

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_VERBOSE: true

jobs:
  Test:
    strategy:
      matrix:
        conf:
          - { toolchain: stable  , os: ubuntu-18.04   }
          - { toolchain: beta    , os: ubuntu-18.04   }
          - { toolchain: nightly , os: ubuntu-18.04   }
          - { toolchain: stable  , os: macos-latest   }
        # - { toolchain: stable  , os: windows-latest , only_build: true }

    runs-on: ${{ matrix.conf.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.conf.toolchain }}
        override: true

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all-targets
      if: matrix.conf.only_build == true

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: xscript
        args: test
      if: matrix.conf.only_build != true
  
  Lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: clippy, rustfmt
        override: true

    - name: Format check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Run clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --all-targets

  DeployMasterDoc:
    runs-on: ubuntu-18.04
    container:
      image: rustops/crates-build-env:latest
      options: --memory 3221225472
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    # TODO:
    # * restrict network access during building docs.
    # * restrict all write access expect target/
    - name: Build API docs
      uses: actions-rs/cargo@v1
      with:
        command: xscript
        args: doc

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: published-docs
        path: target/doc

    - name: Deply to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v2.3.1
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./target/doc
